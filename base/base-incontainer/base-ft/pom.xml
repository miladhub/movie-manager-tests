<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sample.base</groupId>
		<artifactId>base-incontainer</artifactId>
		<version>1.4</version>
	</parent>
	
    <artifactId>base-ft</artifactId>
	
    <name>Base Functional Test Module</name>

    <packaging>pom</packaging>
    
    <properties>
        <jsfunit.version>1.3.0.Final</jsfunit.version>
    </properties>
	
    <dependencies>
		<!-- JSFUnit, escludo le dipendenze già presenti in JBoss -->
		<dependency>
			<groupId>org.jboss.jsfunit</groupId>
			<artifactId>jboss-jsfunit-core</artifactId>
			<version>${jsfunit.version}</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>xerces</groupId>
					<artifactId>xercesImpl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>xalan</groupId>
					<artifactId>xalan</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
			<groupId>org.jboss.jsfunit</groupId>
			<artifactId>jboss-jsfunit-richfaces</artifactId>
			<version>${jsfunit.version}</version>
		</dependency>

        <!-- UIComponent, etc... -->
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
		    <version>1.2_12</version>
		    <scope>provided</scope>
		</dependency>
		
		<!-- JSFUnit è 3.8.1-based -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>compile</scope>
		</dependency>
		
		<!-- modulo che contiene la configurazione web.xml e il file XSD di Cactus da aggiungere al WAR da testare -->
		<dependency>
			<groupId>org.sample.web</groupId>
			<artifactId>jsfunit-web</artifactId>
			<version>1.0</version>
			<type>war</type>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	
	<build>
	    <sourceDirectory>src/test/java</sourceDirectory>
	    <testSourceDirectory>src/test/java</testSourceDirectory>
	    
		<resources>
            <resource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.xls</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        
		<plugins>
		    <!-- [test] disattiva l'esecuzione dei test JUnit, perché li vogliamo eseguire nella fase 'integration-test' -->
            <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		        <version>2.5</version>
                <configuration>
	                <skip>true</skip>
                </configuration>
            </plugin>
            
            <!-- 'mergedWebXml/web.xml': locazione in cui a default il goal webxml:merge scrive il file mergiato -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>${project.build.directory}/mergedWebXml/web.xml</webXml>
                </configuration>
            </plugin>
            
            <!-- i web.xml vengono estratti in '${project.build.directory}/dependency', parametro 'outputDirectory' -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <id>unpack-web-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includes>**/web.xml</includes>
                            <excludes>**/*.jsp,**/*.htm*,**/*.css,**/*.gif,**/*.bmp,**/*.jpg,**/*.class,**/*.properties,**/*.xls</excludes>
                            <includeTypes>war</includeTypes>
                            <useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- defaults: esegue nella fase process-resources e scrive il file risultato in 'mergedWebXml/web.xml' -->
            <plugin>
                <groupId>com.i4c.plugins</groupId>
                <artifactId>maven-webxml-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>merge-web-xmls</id>
                        <goals><goal>merge</goal></goals>
                    </execution>
                </executions>
            </plugin>
	    </plugins>
    </build>
    
	<profiles>
	    <profile>
	        <id>it</id>
	        <build>
	            <plugins>
			        <!-- [integration-test] esegue i test in remoto invocando il war degli IT -->
			        <plugin>
				        <groupId>org.apache.maven.plugins</groupId>
				        <artifactId>maven-surefire-plugin</artifactId>
				        <executions>
					        <execution>
						        <id>surefire-it</id>
						        <phase>integration-test</phase>
						        <goals>
							        <goal>test</goal>
						        </goals>
				                <configuration>
					                <skip>false</skip>
					                <systemProperties>
						                <property>
							                <name>cactus.contextURL</name>
							                <value>http://${test.server.name}:${test.server.port}/${project.build.finalName}</value>
						                </property>
					                </systemProperties>
				                </configuration>
					        </execution>
				        </executions>
			        </plugin>
			    </plugins>
	        </build>
	    </profile>
	</profiles>
</project>
